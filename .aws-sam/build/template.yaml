AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Functions for ARM and x86

  '
Resources:
  ARMGoFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmGoFloat
      CodeUri: ARMGoFloat
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
      - arm64
      Timeout: 120
      Tags:
        Name: ARMGoFloat
      Policies:
      - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile
      SamResourceId: ARMGoFloat
  ARMGoFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: ARMGoFloat
  permissionForURLInvokeArmFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ARMGoFloat
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  ARMGoInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmGoInt
      CodeUri: ARMGoInt
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
      - arm64
      Timeout: 120
      Tags:
        Name: ARMGoInt
      Policies:
      - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile
      SamResourceId: ARMGoInt
  ARMGoIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: ARMGoInt
  permissionForURLInvokeArmInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ARMGoInt
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  IntelGoInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelGoInt
      CodeUri: IntelGoInt
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
      - x86_64
      Timeout: 120
      Tags:
        Name: IntelGoInt
      Policies:
      - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile
      SamResourceId: IntelGoInt
  IntelGoIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: IntelGoInt
  permissionForURLInvokeIntelInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: IntelGoInt
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  IntelGoFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelGoFloat
      CodeUri: IntelGoFloat
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
      - x86_64
      Timeout: 120
      Tags:
        Name: IntelGoFloat
      Policies:
      - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile
      SamResourceId: IntelGoFloat
  IntelGoFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: IntelGoFloat
  permissionForURLInvokeIntelFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: IntelGoFloat
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  ARMJsFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmJsFloat
      CodeUri: ARMJsFloat
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
      - arm64
      Timeout: 120
      Tags:
        Name: ARMJsFloat
      Policies:
      - AWSLambdaExecute
    Metadata:
      SamResourceId: ARMJsFloat
  ARMJsFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: ARMJsFloat
  permissionForURLInvokeArmJsFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ARMJsFloat
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  IntelJsFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelJsFloat
      CodeUri: IntelJsFloat
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Timeout: 120
      Tags:
        Name: IntelJsFloat
      Policies:
      - AWSLambdaExecute
    Metadata:
      SamResourceId: IntelJsFloat
  IntelJsFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: IntelJsFloat
  permissionForURLInvokeIntelJsFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: IntelJsFloat
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  IntelJsInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelJsInt
      CodeUri: IntelJsInt
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Timeout: 120
      Tags:
        Name: IntelJsInt
      Policies:
      - AWSLambdaExecute
    Metadata:
      SamResourceId: IntelJsInt
  IntelJsIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: IntelJsInt
  permissionForURLInvokeIntelJsInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: IntelJsInt
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  ARMJsInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ARMJsInt
      CodeUri: ARMJsInt
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
      - arm64
      Timeout: 120
      Tags:
        Name: ARMJsInt
      Policies:
      - AWSLambdaExecute
    Metadata:
      SamResourceId: ARMJsInt
  ARMJsIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Ref: ARMJsInt
  permissionForURLInvokeARMJsInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ARMJsInt
      FunctionUrlAuthType: NONE
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
  WebAppInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa
      InstanceType: t2.micro
      KeyName: EC2Test
      SecurityGroupIds:
      - Ref: WebAppSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Sub:
          - '#!/usr/bin/env bash

            yum update -y

            curl -sL https://rpm.nodesource.com/setup_19.x | bash -

            yum install -y nodejs git

            node -e "console.log(''Running Node.js '' + process.version)"

            echo ''export ARM_FLOAT_GO=${armFloatGo}'' >> /etc/profile

            echo ''export ARM_INT_GO=${armIntGo}'' >> /etc/profile

            echo ''export INTEL_FLOAT_GO=${intelFloatGo}'' >> /etc/profile

            echo ''export INTEL_INT_GO=${intelIntGo}'' >> /etc/profile

            echo ''export ARM_FLOAT_JS=${armFloatJs}'' >> /etc/profile

            echo ''export ARM_INT_JS=${armIntJs}'' >> /etc/profile

            echo ''export INTEL_FLOAT_JS=${intelFloatJs}'' >> /etc/profile

            echo ''export INTEL_INT_JS=${intelIntJs}'' >> /etc/profile

            '
          - armFloatGo:
              Fn::GetAtt:
              - ARMGoFloatURL
              - FunctionUrl
            armIntGo:
              Fn::GetAtt:
              - ARMGoIntURL
              - FunctionUrl
            intelFloatGo:
              Fn::GetAtt:
              - IntelGoFloatURL
              - FunctionUrl
            intelIntGo:
              Fn::GetAtt:
              - IntelGoIntURL
              - FunctionUrl
            armFloatJs:
              Fn::GetAtt:
              - ARMJsFloatURL
              - FunctionUrl
            armIntJs:
              Fn::GetAtt:
              - ARMJsIntURL
              - FunctionUrl
            intelFloatJs:
              Fn::GetAtt:
              - IntelJsFloatURL
              - FunctionUrl
            intelIntJs:
              Fn::GetAtt:
              - IntelJsIntURL
              - FunctionUrl
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: TestingEC2
      GroupDescription: Allow HTTP/HTTPS and SSH inbound and outbound traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
Outputs:
  ARMGoFloatLambdafn:
    Value:
      Ref: ARMGoFloat
    Description: Fn for Go ARM float
  ARMGoFloatLambdaURL:
    Value:
      Fn::GetAtt:
      - ARMGoFloatURL
      - FunctionUrl
  ARMGoIntLambdafn:
    Value:
      Ref: ARMGoInt
    Description: Fn for Go ARM Int
  ARMGoIntLambdaURL:
    Value:
      Fn::GetAtt:
      - ARMGoIntURL
      - FunctionUrl
  ARMJsFloatLambdafn:
    Value:
      Ref: ARMJsFloat
    Description: Fn for Javascript ARM float
  ARMJsFloatLambdaURL:
    Value:
      Fn::GetAtt:
      - ARMJsFloatURL
      - FunctionUrl
  ARMJsIntLambdafn:
    Value:
      Ref: ARMJsInt
    Description: Fn for Javascript ARM Int
  ARMJsIntLambdaURL:
    Value:
      Fn::GetAtt:
      - ARMJsIntURL
      - FunctionUrl
  IntelGoFloatLambdafn:
    Value:
      Ref: IntelGoFloatURL
    Description: Fn for Go Intel Float
  IntelGoFloatLambdaURL:
    Value:
      Fn::GetAtt:
      - IntelGoFloatURL
      - FunctionUrl
  IntelJsFloatLambdafn:
    Value:
      Ref: IntelJsFloat
    Description: Fn for Javascript Intel float
  IntelJsFloatLambdaURL:
    Value:
      Fn::GetAtt:
      - IntelJsFloatURL
      - FunctionUrl
  IntelGoIntLambdafn:
    Value:
      Ref: IntelGoInt
    Description: Fn for Go Intel float
  IntelGoIntLambdaURL:
    Value:
      Fn::GetAtt:
      - IntelGoIntURL
      - FunctionUrl
  IntelJsIntLambdafn:
    Value:
      Ref: IntelJsInt
    Description: Fn for Go Intel float
  IntelJsIntLambdaURL:
    Value:
      Fn::GetAtt:
      - IntelJsIntURL
      - FunctionUrl
  EC2TestingServer:
    Value:
      Fn::GetAtt:
      - WebAppInstance2
      - PublicIp
