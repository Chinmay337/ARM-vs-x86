AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Functions for ARM and x86
Resources:
  ##########################################################################
  #   Lambda Function                                                      #
  ##########################################################################

  ARMGoFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmGoFloat
      CodeUri: ARMGoFloat/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Timeout: 120
      Tags:
        Name: "ARMGoFloat"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile

  ARMGoFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref ARMGoFloat

  permissionForURLInvokeArmFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ARMGoFloat
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  ARMGoInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmGoInt
      CodeUri: ARMGoInt/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Timeout: 120
      Tags:
        Name: "ARMGoInt"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile

  ARMGoIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref ARMGoInt

  permissionForURLInvokeArmInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ARMGoInt
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  ##########################################################################
  #    I N T E L                                                           #
  ##########################################################################

  IntelGoInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelGoInt
      CodeUri: IntelGoInt/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      Timeout: 120
      Tags:
        Name: "IntelGoInt"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile

  IntelGoIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref IntelGoInt

  permissionForURLInvokeIntelInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IntelGoInt
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  IntelGoFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelGoFloat
      CodeUri: IntelGoFloat/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      Timeout: 120
      Tags:
        Name: "IntelGoFloat"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
    Metadata:
      BuildMethod: makefile

  IntelGoFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref IntelGoFloat

  permissionForURLInvokeIntelFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IntelGoFloat
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  ########################################### MB
  ARMJsFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArmJsFloat
      CodeUri: JsFloat/
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures: [arm64]
      Timeout: 120
      Tags:
        Name: "ARMJsFloat"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute

  ARMJsFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref ARMJsFloat

  permissionForURLInvokeArmJsFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ARMJsFloat
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  ########################################### MB

  IntelJsFloat:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelJsFloat
      CodeUri: JsFloat/
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Timeout: 120
      Tags:
        Name: "IntelJsFloat"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute

  IntelJsFloatURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref IntelJsFloat

  permissionForURLInvokeIntelJsFloat:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IntelJsFloat
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  # JS INT
  IntelJsInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: IntelJsInt
      CodeUri: JsInt/
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Timeout: 120
      Tags:
        Name: "IntelJsInt"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute

  IntelJsIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref IntelJsInt

  permissionForURLInvokeIntelJsInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IntelJsInt
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  ARMJsInt:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ARMJsInt
      CodeUri: JsInt/
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - arm64
      Timeout: 120
      Tags:
        Name: "ARMJsInt"
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute

  ARMJsIntURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref ARMJsInt

  permissionForURLInvokeARMJsInt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ARMJsInt
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

  WebInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa # ImageID valid only in us-east-1 region
      InstanceType: t2.micro
      KeyName: EC2Test
      Tags:
        - Key: "Schedule"
          Value: "ARMSchedule"
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              sudo su
              cd ~
              touch ~/.bashrc
              cat > /tmp/startup.sh << EOF
              echo "Setting up NodeJS Environment"
              curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.0/install.sh | bash
              echo 'export NVM_DIR="/home/ec2-user/.nvm"' >> /home/ec2-user/.bashrc
              echo 'export NVM_DIR="/home/ec2-user/.nvm"' >> /home/ec2-user/.bash_profile
              echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> /home/ec2-user/.bashrc
              . /home/ec2-user/.nvm/nvm.sh
              . /home/ec2-user/.bash_profile
              . /home/ec2-user/.bashrc
              nvm install 16
              nvm ls
              EOF
              chown ec2-user:ec2-user /tmp/startup.sh && chmod a+x /tmp/startup.sh
              sudo ln -s /home/ec2-user/.nvm/versions/node/v16.18.1/bin/node  /usr/bin/node
              sudo ln -s /home/ec2-user/.nvm/versions/node/v16.18.1/bin/npm /usr/bin/npm
              sleep 1; su - ec2-user -c "/tmp/startup.sh"
              node -e "console.log('Running Node.js ' + process.version)"
              yum install git -y
              echo 'export ARM_FLOAT_GO=${armFloatGo}' >> /etc/profile
              echo 'export ARM_INT_GO=${armIntGo}' >> /etc/profile
              echo 'export INTEL_FLOAT_GO=${intelFloatGo}' >> /etc/profile
              echo 'export INTEL_INT_GO=${intelIntGo}' >> /etc/profile
              echo 'export ARM_FLOAT_JS=${armFloatJs}' >> /etc/profile
              echo 'export ARM_INT_JS=${armIntJs}' >> /etc/profile
              echo 'export INTEL_FLOAT_JS=${intelFloatJs}' >> /etc/profile
              echo 'export INTEL_INT_JS=${intelIntJs}' >> /etc/profile
              cd /home/ec2-user/ && git clone https://github.com/Chinmay337/EC2-Scheduler-Instance.git
              cd EC2-Scheduler-Instance
              npm i
              chmod +x /etc/rc.d/rc.local
              echo 'sudo -E node /home/ec2-user/EC2-Scheduler-Instance/app.js >> /home/ec2-user/arm.txt' >> /etc/rc.local

            - armFloatGo: !GetAtt ARMGoFloatURL.FunctionUrl
              armIntGo: !GetAtt ARMGoIntURL.FunctionUrl
              intelFloatGo: !GetAtt IntelGoFloatURL.FunctionUrl
              intelIntGo: !GetAtt IntelGoIntURL.FunctionUrl
              armFloatJs: !GetAtt ARMJsFloatURL.FunctionUrl
              armIntJs: !GetAtt ARMJsIntURL.FunctionUrl
              intelFloatJs: !GetAtt IntelJsFloatURL.FunctionUrl
              intelIntJs: !GetAtt IntelJsIntURL.FunctionUrl

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "TestingEC2"
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

##########################################################################
#   OUTPUTS                                                              #
##########################################################################

Outputs:
  ARMGoFloatLambdafn:
    Value: !Ref ARMGoFloat
    Description: Fn for Go ARM float

  ARMGoFloatLambdaURL:
    Value: !GetAtt ARMGoFloatURL.FunctionUrl

  ARMGoIntLambdafn:
    Value: !Ref ARMGoInt
    Description: Fn for Go ARM Int

  ARMGoIntLambdaURL:
    Value: !GetAtt ARMGoIntURL.FunctionUrl

  ARMJsFloatLambdafn:
    Value: !Ref ARMJsFloat
    Description: Fn for Javascript ARM float

  ARMJsFloatLambdaURL:
    Value: !GetAtt ARMJsFloatURL.FunctionUrl

  ARMJsIntLambdafn:
    Value: !Ref ARMJsInt
    Description: Fn for Javascript ARM Int

  ARMJsIntLambdaURL:
    Value: !GetAtt ARMJsIntURL.FunctionUrl

  IntelGoFloatLambdafn:
    Value: !Ref IntelGoFloatURL
    Description: Fn for Go Intel Float

  IntelGoFloatLambdaURL:
    Value: !GetAtt IntelGoFloatURL.FunctionUrl

  IntelJsFloatLambdafn:
    Value: !Ref IntelJsFloat
    Description: Fn for Javascript Intel float

  IntelJsFloatLambdaURL:
    Value: !GetAtt IntelJsFloatURL.FunctionUrl

  IntelGoIntLambdafn:
    Value: !Ref IntelGoInt
    Description: Fn for Go Intel float

  IntelGoIntLambdaURL:
    Value: !GetAtt IntelGoIntURL.FunctionUrl

  IntelJsIntLambdafn:
    Value: !Ref IntelJsInt
    Description: Fn for Go Intel float

  IntelJsIntLambdaURL:
    Value: !GetAtt IntelJsIntURL.FunctionUrl

  EC2TestingServer:
    Value: !GetAtt WebInstance2.PublicIp
